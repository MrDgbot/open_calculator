name: Build (Linux, Mac OS, Windows)


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
#  push:
#    branches:
#      - main
#      - master
#    tags-ignore:
#      - v**
#  workflow_dispatch:
  workflow_dispatch:
    inputs:
      TAG:
        description: 'Set a Tag'
        required: true
        default: ''
  push:
    tags:
      - v*
jobs:
#  build-apks-and-linux-app:
#    name: Release Apks/LinuxApp
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11.x'
#      - name: Setup flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: stable
#      - name: Build apks
#        run: |
#          \cp -f pubspec.yaml assets/
#          flutter pub get
#          flutter build apk --release
#          flutter build apk --target-platform android-arm,android-arm64,android-x64 --split-per-abi --release
#          mkdir -p releases
#          mv -f build/app/outputs/flutter-apk/*-release.apk releases
#          mv -f releases/app-release.apk releases/app-universal-release.apk
#      - name: Sign build apk
#        uses: iota9star/sign-android-release@v1.0.5
#        with:
#          releaseDirectory: releases
#          fileRegex: .*-release.apk
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#      - name: Rename signed apk
#        run: |
#          for name in $(ls releases/*-signed.apk);do mv -f $name ${name%-signed.apk}.apk ;done
#      - name: Build linux app
#        run: |
#          sudo apt-get install bash curl file unzip xz-utils zip libglu1-mesa clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev -y
#          flutter pub get
#          flutter config --enable-linux-desktop
#          flutter build linux --release
#          cd build/linux/x64/release/bundle
#          zip -r linux-release.zip ./
#          mv linux-release.zip ../../../../../
#      - name: Release to github
#        uses: ncipollo/release-action@v1
#        with:
#          allowUpdates: true
#          artifacts: "releases/*-release.apk,linux-release.zip"
#          token: ${{ secrets.GITHUB_TOKEN }}
#          tag: ${{ github.event.inputs.TAG }}

  build-windows-app:
    name: Release Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Build windows
        run: |
          Copy-Item -Path pubspec.yaml -Destination assets -Force
          flutter pub get
          flutter config --enable-windows-desktop
          flutter build windows --release --no-tree-shake-icons
          Compress-Archive -Path build/windows/runner/Release/* windows-win32-release.zip -Force
          & "${env:ProgramFiles(x86)}\Inno Setup 6\iscc.exe" windows_inno_setup.iss
      - name: Release build
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "windows-win32-release.zip,open_calculator_setup.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.TAG }}

  build-macos:
      name: "Build MacOS"
      runs-on: macos-latest
      timeout-minutes: 30
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      steps:
        - uses: actions/checkout@v2.4.0

        - name: Setup Flutter SDK
          uses: subosito/flutter-action@v2.8.0
          with:
            channel: "stable"

        - name: Set Up XCode
          uses: devbotsxyz/xcode-select@v1.1.0

        - name: Install create-dmg
          run: brew install create-dmg

        - name: Enable desktop
          run: flutter config --enable-macos-desktop

        - name: Install Cider
          run: flutter pub global activate cider

        - name: Set new Flutter version
          run: cider version ${{ github.event.inputs.TAG }}

        - name: Set release changelog
          run: cider release

        - name: Flutter get packages
          run: flutter pub get

        - name: Build Runner & version
          run: flutter pub run build_runner build --delete-conflicting-outputs

        - name: Flutter build app
          run: flutter build macos

        - name: Create dmg
          run: |
            ./scripts/create_mac_dmg.sh
        - name: Compress artifacts
          run: zip -r macos-${{ github.event.inputs.TAG }}.zip build/macos/Build/Products/Release

        - name: Upload artifacts to release
          uses: svenstaro/upload-release-action@2.2.1
          with:
            # GitHub token.
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            # Local file to upload.
            file: macos-${{ github.event.inputs.TAG }}.zip
            # Tag to use as a release.
            tag: ${{ github.event.inputs.TAG }}

        - name: Upload DMG to release
          uses: svenstaro/upload-release-action@2.2.1
          with:
            # GitHub token.
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            # Local file to upload.
            file: build/macos/Build/Products/Release/open_calculator.dmg
            asset_name: open_calculator-macos-${{ github.event.inputs.TAG }}.dmg
            # Tag to use as a release.
            tag: ${{ github.event.inputs.TAG }}


